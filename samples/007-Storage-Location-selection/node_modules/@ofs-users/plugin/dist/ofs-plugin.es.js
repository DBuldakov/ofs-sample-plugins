import{OFS as e}from"@ofs-users/proxy";class OFSMessage{constructor(){this.apiVersion=-1,this.method="no method"}static parse(e){try{return Object.assign(new OFSMessage,JSON.parse(e))}catch(e){return new OFSMessage}}}var s;!function(e){e.Close="close",e.Open="open",e.Update="update",e.UpdateResult="updateResult",e.Init="init",e.Ready="ready",e.InitEnd="initEnd"}(s||(s={}));class OFSOpenMessage extends OFSMessage{}class OFSCloseMessage extends OFSMessage{constructor(){super(...arguments),this.method="close"}}class OFSPlugin{constructor(e){console.log(e+": Created"),this.t=e,this.i()}get proxy(){return this.o}get tag(){return this.t}h(e){console.log(this.t+": Message received:",e.data),console.log(`${this.t}: Coming from ${e.origin}`);var s=OFSMessage.parse(e.data);switch(this.g(s),s.method){case"init":this.l(s);break;case"open":this.open(s);break;case"updateResult":this.updateResult(s);break;case"wakeUp":this.wakeup(s);break;case"error":this.error(s);break;case"no method":console.warn(this.t+": Message discarded");break;default:throw Error("Unknown method "+s.method)}return!0}async l(e){this.init(e);this.u({apiVersion:1,method:"initEnd"})}g(s){s.securedData&&(console.log(this.t+": Processing",s.securedData),s.securedData.ofsInstance&&s.securedData.ofsClientId&&s.securedData.ofsClientSecret&&(this.o=new e({instance:s.securedData.ofsInstance,clientId:s.securedData.ofsClientId,clientSecret:s.securedData.ofsClientSecret})))}static p(e){return""!=e?e.indexOf("://")>-1?"https://"+e.split("/")[2]:"https://"+e.split("/")[0]:""}u(e){console.log(this.t+": Sending  message"+JSON.stringify(e,void 0,4));var s=document.referrer||document.location.ancestorOrigins&&document.location.ancestorOrigins[0]||"";s&&parent.postMessage(e,OFSPlugin.p(s))}sendMessage(e,s){this.u({apiVersion:1,method:e,...s})}i(){console.log("OFS plugin ready"),window.addEventListener("message",this.h.bind(this),!1);this.u({apiVersion:1,method:"ready",sendInitData:!0})}init(e){console.warn(this.t+": Empty init method")}close(e){this.sendMessage(s.Close,e)}update(e){this.sendMessage(s.Update,e)}error(e){throw Error("ERROR Method not implemented.")}wakeup(e){throw Error("WAKEUP Method not implemented.")}updateResult(e){throw Error("UPDATERESULT Method not implemented.")}}export{s as Method,OFSCloseMessage,OFSMessage,OFSOpenMessage,OFSPlugin};
